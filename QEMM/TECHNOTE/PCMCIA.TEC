
                 Maximizing Memory with PCMCIA

 Quarterdeck Technical Note #298             Filename: PCMCIA.TEC
 by Michael Bolton & Giri Singh            CompuServe: PCMCIA.TEC
 Last revised: 4/4/95                        Category: QEMM

 Subject: Maximizing memory with PCMCIA hardware and software.

 Q. On my notebook machine, the PCMCIA hardware and software seems
    to take up a lot of space in High RAM.  What can I do to reduce
    this?

 A. PCMCIA hardware and software, by default, may be configured to
    use more address space than they require.  You can often adjust
    downward the amount of address space reserved for your PCMCIA
    devices if you are NOT using an ATA hard drive or a memory card.
    The example techniques below have been applied successfully with
    CardSoft PCMCIA Card Services Support software from SystemSoft.
    Notes follow for Phoenix PCMCIA Card Services Support, AMI
    PCMCIA Card Services Support, and IBM's PCMCIA Card Services.
    If your system uses some other vintage of PCMCIA Card Services
    support software, then consult the manual that came with your
    system for similar techniques.


 1) In your current CONFIG.SYS file, remove any EXCLUDE parameters
    that refer to the D000 page on the QEMM386.SYS line.  Then add
    the parameter X=D000:16K to the end of the QEMM386.SYS line.
    (Even a 16K EXCLUDE is probably excessive.  Most PCMCIA network
    and modem cards require only a 4K EXCLUDE, and even this is
    only needed for the PCMCIA diagnostic software to work
    properly. Some experimentation may be called for, depending the
    PCMCIA devices in use on your system.)

 2) Copy your CONFIG.SYS to another file name so that you can
    restore it easily later.  Create a new CONFIG.SYS file with
    only QEMM386.SYS and FILES=40 in it.  Place only the parameters
    RAM X=D000:16K on the QEMM386.SYS line in CONFIG.SYS.  Don't
    put any other EXCLUDEs on the QEMM386.SYS line unless you know
    that they are required for some other aspect of your system.
    The idea is to get QEMM to create High RAM, but to leave a
    small range of address space unmapped.  This range may have to
    be increased if it is insufficient to avoid conflicts;
    conversely, as noted above, the 16K may be reduced to as
    little as 4K if you are using a device that requires little
    or no upper memory space (for example, most PCMCIA modems).
    Copy AUTOEXEC.BAT to another file name.  Create a new
    AUTOEXEC.BAT that preserves only your PROMPT and PATH lines.

 3) Copy the PCMCIA software configuration file -- CSALLOC.INI, in
    our example -- to another name; call it CSALLOC.QDK.

 4) Reboot with the minimal CONFIG.SYS and AUTOEXEC.BAT files you
    created in Step 1.

 5) Change to PCMCIA driver directory (in our case, CARDSOFT), and
    run the PCMCIA configuration utility (in our case, CSALLOC)
    from the command line.  (Some versions of CSALLOC also require
    a /G switch.)

 6) Verify that the CSALLOC.INI file (which will be an ASCII text
    file) is created with a line that says MEM=D000-D3FF.

 7) Restore the original CONFIG.SYS and AUTOEXEC.BAT, and test your
    PCMCIA devices.  In your CONFIG.SYS file, make sure that on
    your QEMM386.SYS line, you have an EXCLUDE that matches the
    range that you EXCLUDEd above (e.g. X=D000:16K or X=D000:4K).
 
 PHOENIX TECHNOLOGIES

 If your system uses Phoenix Technologies PCMCIA Card Services
 Support software version 3.x, you may follow the steps above.  The
 only differences are:

 - the configuration file is named PCM.INI (instead of
   CSALLOC.INI);

 - the setup program is named PCMSETUP.EXE (instead of
   CSALLOC.EXE); and

 - the default directory name is PCM3.

 AMI

 If your System  has AMI PCMCIA Card Services Support software
 installed, you may follow the steps above.  The only differences
 are:

 - the configuration file is named AMICS.CFG (instead of
   CSALLOC.INI);

 - the setup program is named AMISRU.EXE (instead of CSALLOC.EXE);
   and

 - the default directory name is PCMCIA.

 IBM

 IBM PCMCIA Card Services Support software normally comes with the
 Thinkpad series of systems.  The IBM PCMCIA drivers need the
 memory address to be specified via the Resource Map Utility,
 DICRMU01.SYS. This utility loads as a device line in CONFIG.SYS,
 and is described in the documentation that comes with your
 computer.

 Specify an appropriate address range via the /MA parameter to
 DICRMU01.SYS.  For example, to set up a 16K address range at D000,
 and assuming that DICRUM0.SYS is in the PCMCIA directory, the
 DICRMU01.SYS line would look like this:

 DEVICE=C:\PCMCIA\DICRMU01.SYS /MA=D000-D3FF

 If DICRUM01.SYS is in another directory, change the path
 accordingly.

 Q. I installed QEMM on my system, and ran OPTIMIZE, and it seemed
    to identify almost all of my upper memory addresses as High RAM.
    Is this correct?

 A. Probably not.  QEMM and OPTIMIZE provide support for drivers
    that adhere to v2.1 of the PCMCIA specification.  While the 2.1
    spec is almost two years old as of this writing, many vendors
    provide drivers that support only PCMCIA v2.0.  OPTIMIZE may, on
    such systems, identify many more areas of adapter RAM than are
    actually present.  To work around this, pass OPTIMIZE the
    /PCMCIA=xxxx-yyyy parameter, where xxxx is the starting address
    and yyyy the ending address of the range used by your PCMCIA
    drivers.  The starting and ending addresses can be determined
    from your configuration files -- in our examples above,
    CSALLOC.INI, PCM.INI, or AMICS.CFG -- or from the /MA parameter
    on the DICRUM01.SYS line if you're using IBM's PCMCIA
    implementation.

    For example, if your PCMCIA setup is using 16K at address D000,
    you should use the OPTIMIZE parameter

    /PCMCIA=D000-D3FF

    to ensure that OPTIMIZE is aware of the PCMCIA implementation on
    the machine.  Again, you may be able to reduce the size of this
    range.

 ******************************************************************
 *      Trademarks are property of their respective owners.       *
 *   This and other technical notes may be available in updated   *
 *     forms through Quarterdeck's standard support channels.     *
 *          Copyright (C) 1996 Quarterdeck Corporation            *
 ******************** E N D   O F   F I L E ***********************
