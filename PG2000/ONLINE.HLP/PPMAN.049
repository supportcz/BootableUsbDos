%%
1,0:1
%%
.1
    Funktionen der Parallelprozessor-Library

  …ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕª
  ∫ ACHTUNG: Da die Parallelprozessor-Library AVT-Funktionen enthÑlt, kînnen  ∫
  ∫          die Funktionen dieser Library nur verwendet werden, wenn das     ∫
  ∫          Library-Runtime-Modul (B&R-Modul PPMAN.BR) im nullspannungs-     ∫
  ∫          sicheren Speicher (Anwender-ROM) der Steuerung vorhanden ist!    ∫
  ∫          Nach dem öbertragen des Library-Runtime-Moduls in den null-      ∫
  ∫          spannungssicheren Speicher mu· ein KALTSTART (frÅher "TOTALINIT" ∫
  ∫          genannt) durchgefÅhrt werden.                                    ∫
  »ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕº










                                     @002[ Fortsetzung ]               @999[ HILFE beenden ]
.2
    Funktionen der Parallelprozessor-Library (Fortsetzung)

    Nach dem Importieren der Parallelprozessor-Library stehen Ihnen folgende
    Funktionen zur VerfÅgung:

    @020[PP_ident  ] Ident-Nummer des Parallelprozessors anfordern
    @030[PP_trigger] Starten der HS#2 am Parallelprozessor (PP-HSTC)
    @040[PP_ready  ] PrÅfen, ob die HS#2 am Parallelprozessor (PP-HSTC) bereit ist

    Diese Funktionen kînnen nur auf der Zentraleinheit verwendet werden!











                                       @200[ ANHANG ]                      @001[ öbersicht ]
.20
    PP_ident - Ident-Nummer des PPs anfordern

    @021[PP_ident] (enable,module_no,pp_ident,status)

    Parameter-Datentypen :
    ->  enable    : BIT           Der Funktionsblock wird nur ausgefÅhrt, wenn
                                  enable = 1 ist.
    ->  @025[module_no ]: WORD          Moduladresse des Parallelprozessors in
                                  dezimaler Form.
    <-  pp_ident  : LONG          Ident-Nummer des Parallelprozessors. Diese
                                  Ident-Nummer wird fÅr die anderen Funktionen
                                  der Parallelprozessor-Library benîtigt.
    <-  @026[status    ]: WORD          Fehlernummer (0 = kein Fehler)

    Die Funktion PP_ident() liefert die Ident-Nummer des Parallelprozessors mit
    der angegebenen Moduladresse. Die Ident-Nummer des Parallelprozessors (PPs)
    wird fÅr die anderen Funktionen der Parallelprozessor-Library benîtigt.
    Die Funktion PP_ident() kann nur auf der CPU verwendet werden!



                                     @021[ Fortsetzung ]                   @001[ öbersicht ]
.21
    PP_ident - Ident-Nummer des PPs anfordern (Fortsetzung)

    Ein fehlerfreier Aufruf der Funktion PP_ident() ist nur mîglich, wenn
    am Parallelprozessor die PP-HSTC konfiguriert ist (schlagen Sie dazu im
    Kapitel "Systemkonfiguration" des "B&R SYSTEM 2000 System-Software
    Referenzhandbuch" nach).















                                                                     @001[ öbersicht ]
.25
    PP_ident - Ident-Nummer des PPs anfordern (Fortsetzung)

    -> Parameter <module_no >: WORD

    Moduladresse des Parallelprozessors:

    B&R 2010 ... Die Moduladresse des Parallelprozessors ist nicht steckplatz-
                 abhÑngig, sondern wird durch einen Nummernschalter auf dem
                 Modul eingestellt.
    B&R 2005 ... Die Moduladresse ist durch den Steckplatz bestimmt (Steck-
                 platzcodierung). Die ZÑhlung der Adressierung beginnt bei
                 Steckplatz mit der Moduladresse 1.









                                      @020[ PP_ident ]                     @001[ öbersicht ]
.26
    PP_ident - Ident-Nummer des PPs anfordern (Fortsetzung)

    <- Parameter <status    >: WORD

    Fehlernummern der Funktion PP_ident():
    8016    Referenziertes Systemmodul (Parallelprozessor) fehlt

    Eine Liste aller mîglichen Fehlermeldungen der Parallelprozessor-Library
    finden Sie im Anhang @300[Fehlermeldungen].












                                      @020[ PP_ident ]                     @001[ öbersicht ]
.30
    PP_trigger - Starten der HS#2 am PP

    @030[PP_trigger] (enable,pp_ident,status)

    Parameter-Datentypen :
    ->  enable    : BIT           Der Funktionsblock wird nur ausgefÅhrt, wenn
                                  enable = 1 ist.
    ->  pp_ident  : LONG          Ident-Nummer des Parallelprozessors
                                  (von @020[PP_ident]).
    <-  @035[status    ]: WORD          Fehlernummer (0 = kein Fehler)

    Mit der Funktion PP_trigger() kînnen Sie am Parallelprozessor mit der ange-
    gebenen Ident-Nummer ("pp_ident") einen Interrupt auslîsen, der die PP-HSTC
    startet. Ist die PP-HSTC noch nicht bereit, wird am Ausgang "status" die
    Fehlernummer 6354 ausgegeben.
    Die Funktion PP_trigger() kann nur auf der CPU verwendet werden!
    Ein fehlerfreier Aufruf der Funktion PP_trigger() ist nur mîglich, wenn am
    Parallelprozessor die PP-HSTC konfiguriert ist. Weitere Informationen zum
    Thema "PP-HSTC" finden Sie im "B&R SYSTEM 2000 System-Software Referenz-
    handbuch".

                                                                     @001[ öbersicht ]
.35
    PP_trigger - Starten der HS#2 am PP (Fortsetzung)

    <- Parameter <status    >: WORD

    Fehlernummern der Funktion PP_trigger():
    6354    PP-HSTC-Zyklus noch nicht fertig
    6355    Keine PP-HSTC am PP installiert bzw. gestartet

    Eine Liste aller mîglichen Fehlermeldungen der Parallelprozessor-Library
    finden Sie im Anhang @300[Fehlermeldungen].











                                     @030[ PP_trigger ]                    @001[ öbersicht ]
.40
    PP_ready - PrÅfen, ob die HS#2 am PP bereit ist

    @040[PP_ready] (enable,pp_ident,status)

    Parameter-Datentypen :
    ->  enable    : BIT           Der Funktionsblock wird nur ausgefÅhrt, wenn
                                  enable = 1 ist.
    ->  pp_ident  : LONG          Ident-Nummer des Parallelprozessors
                                  (von @020[PP_ident]).
    <-  @045[status    ]: WORD          Fehlernummer (0 = kein Fehler)

    Mit der Funktion PP_ready() kînnen Sie feststellen, ob die PP-HSTC am
    Parallelprozessor mit der angegebenen Ident-Nummer ("pp_ident") bereit ist,
    d.h. ob der letzte PP-HSTC-Zyklus abgeschlossen ist. Ist die PP-HSTC noch
    nicht bereit, wird am Ausgang "status" die Fehlernummer 6354 ausgegeben.
    Die Funktion PP_ready() kann nur auf der CPU verwendet werden!
    Ein fehlerfreier Aufruf der Funktion PP_ready() ist nur mîglich, wenn
    am Parallelprozessor die PP-HSTC konfiguriert ist (schlagen Sie dazu im
    Kapitel "Systemkonfiguration" des "B&R SYSTEM 2000 System-Software
    Referenzhandbuch" nach).

                                                                     @001[ öbersicht ]
.45
    PP_ready - PrÅfen, ob die HS#2 am PP bereit ist (Fortsetzung)

    <- Parameter <status    >: WORD

    Fehlernummern der Funktion PP_ready():
    6354    PP-HSTC-Zyklus noch nicht fertig
    6355    Keine PP-HSTC am PP installiert bzw. gestartet

    Eine Liste aller mîglichen Fehlermeldungen der Parallelprozessor-Library
    finden Sie im Anhang @300[Fehlermeldungen].











                                      @040[ PP_ready ]                     @001[ öbersicht ]
.200
    ANHANG : LIBRARY-Informationen


    @201[< Allgemeines       >]      Voraussetzungen etc.

    @250[< Syntax            >]      Syntax fÅr die ErklÑrung der Funktionen

    @300[< Fehlernummern     >]      Zusammenfassung aller Fehlernummern

    @350[< AusfÅhrungszeiten >]      AusfÅhrungszeiten und Stackbedarf

    @400[< History           >]      Neue FunktionalitÑten und VersionsÑnderungen









                                                                     @001[ öbersicht ]
.201
    Parallelprozessor-Library : Allgemeines

    Bei Multiprozessoren (MPs) und Parallelprozessoren (PPs) kann neben einer
    Timer-HSTC auch eine eigene Multiprozessor- bzw. Parallelprozessor-HS-
    Taskklasse (kurz: MP-HSTC bzw. PP-HSTC) konfiguriert werden.
    Die PP-HSTC wird nicht durch einen Hardware-Timer, sondern Åber die
    Funktionen der Parallelprozessor-Library in der Applikation der Haupt-CPU
    ausgelîst. Dadurch kînnen Teile der Applikation auf dem Parallelprozessor
    (synchron zur Haupt-CPU) ausgefÅhrt werden.

    Anmerkungen:
    - Bevor Sie die Funktionen der Parallelprozessor-Library in Ihrem Projekt
      verwenden kînnen, mÅssen Sie die Library in die entsprechende Projekt-
      Datenbank importieren.

    - Die Funktionen der Parallelprozessor-Library kînnen nur verwendet werden,
      wenn das B&R-Modul PPMAN.BR sowohl im Anwender-ROM der Haupt-CPU als auch
      im Anwender-ROM des Parallelprozessors vorhanden ist.



                                     @202[ Fortsetzung ]                   @001[ öbersicht ]
.202
    Parallelprozessor-Library : Allgemeines (Fortsetzung)

    - Da die Parallelprozessor-Library AVT-Funktionen enthÑlt, kînnen die
      Funktionen dieser Library nur verwendet werden, wenn das Library-Runtime-
      Modul (B&R-Modul PPMAN.BR) im Anwender-ROM der CPU vorhanden ist.

    - Die Laufzeiten der Tasks in der PP-HSTC dÅrfen nicht zu lang sein
      (Laufzeitmessung mit dem Profiler), da eine öberlastung der PP-HSTC
      zu einem totalen Zeitengpa· (Fehler 6002) fÅhren kann.

    - Alle Funktionen der Parallelprozessor-Library liefern im Fehlerfall als
      Ergebnis eine @300[Fehlernummer].









                                       @200[ ANHANG ]                      @001[ öbersicht ]
.250
    Parallelprozessor-Library : Syntaxbeschreibung

    Datentypen:
    FÅr viele Funktionen sind bestimmte Gruppen von Datentypen zulÑssig. Um
    bei der Funktionsbeschreibung nicht alle zulÑssigen Datentypen anfÅhren
    zu mÅssen, werden folgende Gruppenbezeichnungen eingefÅhrt:
    …ÕÕÕÕÕÕÕÕÀÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕª
    ∫ Gruppe ∫  BIT  ≥ INT8  ≥ BYTE  ≥ INT16 ≥ WORD  ≥ INT32 ≥ LONG  ≥ FLOAT ∫
    ÃÕÕÕÕÕÕÕÕŒÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕπ
    ∫ BASIS  ∫       ≥   x   ≥   x   ≥   x   ≥   x   ≥   x   ≥   x   ≥       ∫
    «ƒƒƒƒƒƒƒƒ◊ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ∂
    ∫ NICHT  ∫   x   ≥   x   ≥   x   ≥   x   ≥   x   ≥   x   ≥   x   ≥       ∫
    ∫ FLOAT  ∫       ≥       ≥       ≥       ≥       ≥       ≥       ≥       ∫
    «ƒƒƒƒƒƒƒƒ◊ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ∂
    ∫ ALLE   ∫   x   ≥   x   ≥   x   ≥   x   ≥   x   ≥   x   ≥   x   ≥   x   ∫
    «ƒƒƒƒƒƒƒƒ◊ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ∂
    ∫ FELD   ∫  [x]  ≥  [x]  ≥  [x]  ≥  [x]  ≥  [x]  ≥  [x]  ≥  [x]  ≥  [x]  ∫
    »ÕÕÕÕÕÕÕÕ ÕÕÕÕÕÕÕœÕÕÕÕÕÕÕœÕÕÕÕÕÕÕœÕÕÕÕÕÕÕœÕÕÕÕÕÕÕœÕÕÕÕÕÕÕœÕÕÕÕÕÕÕœÕÕÕÕÕÕÕº
      x  Datentyp ist zulÑssig
     [x] Datentyp ist zulÑssig als Feldvariable oder Zeichenkette (String)

                                     @251[ Fortsetzung ]                   @001[ öbersicht ]
.251
    Parallelprozessor-Library : Syntaxbeschreibung (Fortsetzung)

    Pfeile:
    FÅr die Darstellung von Eingangs- und Ausgangsparametern werden Pfeile
    verwendet. Dabei gilt folgende Vereinbarung:
    …ÕÕÕÕÕÕÕÕÕÀÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕª
    ∫  Pfeil  ∫  Bedeutung                                                   ∫
    ÃÕÕÕÕÕÕÕÕÕŒÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕπ
    ∫   ->    ∫  Eingangsparameter                                           ∫
    «ƒƒƒƒƒƒƒƒƒ◊ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∂
    ∫   <->   ∫  Ein-/Ausgangsparameter. Funktionell ist es ein Ausgangs-    ∫
    ∫         ∫  parameter. öblicherweise wird er aber vor dem Aufruf der    ∫
    ∫         ∫  Funktion mit einer bestimmten Information geladen (z.B.     ∫
    ∫         ∫  einer Adresse). Meist wird die Adresse einer Variable mit   ∫
    ∫         ∫  adr() [PL2000] oder einem Adre·kontakt [KOP] angeschlossen. ∫
    «ƒƒƒƒƒƒƒƒƒ◊ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∂
    ∫   <-    ∫  Ausgangsparameter                                           ∫
    »ÕÕÕÕÕÕÕÕÕ ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕº



                                     @252[ Fortsetzung ]                   @001[ öbersicht ]
.252
    Parallelprozessor-Library : Syntaxbeschreibung (Fortsetzung)

    Funktionsblîcke:
    Funktionsblîcke sind in dieser Online-Hilfe nicht grafisch dargestellt.
    Sie finden aber alle fÅr Funktionsblîcke relevanten Informationen, wie
    Eingangsparameter (->), Ein-/Ausgangsparameter (<->) und Ausgangsparameter
    (<-) in der Online-Hilfe.














                                       @200[ ANHANG ]                      @001[ öbersicht ]
.300
    Parallelprozessor-Library : Fehlernummern

    Die folgende Liste ist eine Zusammenfassung aller mîglichen Fehlermeldungen
    der Parallelprozessor-Library:

    6354    PP-HSTC-Zyklus noch nicht fertig
    6355    Keine PP-HSTC am PP installiert bzw. gestartet
    8016    Referenziertes Systemmodul (Parallelprozessor) fehlt













                                       @200[ ANHANG ]                      @001[ öbersicht ]
.350
    Parallelprozessor-Library : AusfÅhrungszeiten

    Die folgende Tabelle zeigt die AusfÅhrungszeiten der Parallelprozessor-
    Library-Funktionen sowie deren Stackbedarf:

    …ÕÕÕÕÕÕÕÕÕÕÕÕÀÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕª
    ∫ Funktion   ∫  AusfÅhrungs- ≥ Userstack ≥  Supervisor-  ≥ bei CPU      ∫
    ∫            ∫  zeiten [Ês]  ≥  [Bytes]  ≥ stack [Bytes] ≥              ∫
    ÃÕÕÕÕÕÕÕÕÕÕÕÕŒÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÕÕÕÕÕÕÕπ
    ∫ PP_ident   ∫      150      ≥     96    ≥       50      ≥ CP1xx, XP152 ∫
    ∫ PP_trigger ∫      105      ≥     52    ≥       46      ≥ CP1xx, XP152 ∫
    ∫ PP_ready   ∫       95      ≥     52    ≥       46      ≥ CP1xx, XP152 ∫
    »ÕÕÕÕÕÕÕÕÕÕÕÕ ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕœÕÕÕÕÕÕÕÕÕÕÕÕÕÕº








                                       @200[ ANHANG ]                      @001[ öbersicht ]
.400
    Parallelprozessor-Library : History - VersionsÑnderungen

  …ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕª
  ∫ V1.00 -> V1.10  ≥ AKTUELLE VERSION: Neue FunktionalitÑten                 ∫
  «ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∂
  ∫ UnterstÅtzung der Parallelprozessoren des Systems B&R 2005 (CP15x, XP152, ∫
  ∫ IP151, IF152, usw.).                                                      ∫
  ÃÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕπ
  ∫ V1.00           ≥ éLTERE VERSIONEN: Neue FunktionalitÑten                 ∫
  «ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∂
  ∫ UnterstÅtzung von CP10x und IF10x / MP100.                                ∫
  »ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕº









                                       @200[ ANHANG ]                      @001[ öbersicht ]

.End
