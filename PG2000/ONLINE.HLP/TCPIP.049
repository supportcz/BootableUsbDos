%%
1,0:1
%%
.1
    Funktionen der TCPIP-Library

  …ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕª
  ∫ ACHTUNG: Die Funktionen dieser Library kînnen nur verwendet werden, wenn  ∫
  ∫          das B&R-Modul TCPIPMGR.BR im nullspannungssicheren Speicher      ∫
  ∫          (Anwender-ROM) der Steuerung vorhanden ist!                      ∫
  ∫          Nach dem öbertragen dieses B&R-Moduls in den nullspannungs-      ∫
  ∫          sicheren Speicher mu· ein Kaltstart durchgefÅhrt werden.         ∫
  »ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕº

    Nach dem Importieren der TCPIP-Library stehen Ihnen folgende Funktionen
    zur VerfÅgung:

    @020[UDPopen ] Virtuelle Verbindung mit Datagrammen îffnen
    @030[UDPsend ] Datagramm an eine Gegenstelle senden
    @040[UDPrecv ] Eingetroffenes Datagramm lesen
    @050[UDPclose] Datagramm-Verbindung schlie·en
    @060[ETHinfo ] Infos zur Ethernet-Karte/-Verbindung



                                     @002[ Fortsetzung ]               @999[ HILFE beenden ]
.2
    Funktionen der TCPIP-Library (Fortsetzung)

    Die grundlegende Kommunikation zwischen Teilnehmern am TCP/IP-Netzwerk er-
    folgt Åber sogenannte IP-Adressen (Internetadressen). Die IP-Adresse des
    TCP/IP-Managers kann Åber eine getrennte Konfiguration eingestellt werden.
    Intern verwenden die Funktionsblîcke die Standard-BSD-4.3-Schnittstelle.

    Der Funktionsblock UDP_open() besteht aus den BSD-Diensten "socket" und
    "bind". Das Senden wird auf den Dienst "sendto" abgebildet, das Empfangen
    auf den Dienst "recvfrom".











                                       @200[ ANHANG ]                      @001[ öbersicht ]
.20
    UDPopen - Virtuelle Verbindung mit Datagrammen îffnen

    @021[UDPopen] (enable,port,pvpolladr,status,cident)

    Parameter-Datentypen :
    ->  enable    : BIT           Der Funktionsblock wird nur ausgefÅhrt, wenn
                                  enable = 1 ist.
    ->  port      : WORD          Zuordnen eines TCP/IP-Ports.
    ->  pvpolladr : LONG          Dieser Parameter gibt die Adresse einer PV
                                  (Proze·variable) an, die auf 1 gesetzt wird,
                                  wenn eine AktivitÑt auf dem zugeordneten
                                  "Socket" stattfindet. Wird keine Proze·-
                                  variable fÅr Input-Poll-Zwecke verwendet,
                                  wird dieser Eingang auf 0 gesetzt.
    <-  @025[status    ]: WORD          Fehlernummer (0 = kein Fehler).
                                  Der Funktionsblock mu· solange freigegeben
                                  werden (siehe Parameter enable), bis an
                                  diesem Ausgang der Wert 0 ausgegeben wird.



                                     @021[ Fortsetzung ]                   @001[ öbersicht ]
.21
    UDPopen - Virtuelle Verbindung mit Datagrammen îffnen (Fortsetzung)

    Parameter-Datentypen (Fortsetzung) :
    <-  cident    : LONG          Connection Identifier (entspricht der Socket-
                                  Nummer). Mit Hilfe dieses Parameters kînnen
                                  die anderen Funktionen der TCPIP-Library die
                                  geîffnete Verbindung identifizieren.

    Mit Hilfe des Funktionsblocks UDPopen() kann ein TCP/IP-Port zu einem
    anderen TCP/IP-Teilnehmer geîffnet werden. Der Funktionsblock mu· solange
    freigegeben werden (siehe Eingang "enable"), bis am Ausgang "status" der
    Wert 0 ausgegeben wird.

    Anmerkungen:
    Die Portnummern unter 1024 sind durch TCPIP fÅr Systemdienste reserviert.
    Es kînnen mehrere UDPopen-Aufrufe mit unterschiedlichen Portnummern durch-
    gefÅhrt werden. Die Anzahl der parallel offenen Ports wird Åber die Konfi-
    guration eingestellt.



                                                                     @001[ öbersicht ]
.25
    UDPopen - Virtuelle Verbindung mit Datagrammen îffnen (Fortsetzung)

    <- Parameter <status    >: WORD

    Fehlernummern der Funktion UDPopen():
    $0000    UDPopen() erfolgreich durchgefÅhrt
    $5017    Interner PNA-Tabellen-Overflow
    $5030    Die spezifizierte Adresse wird bereits verwendet
    $5031    Die spezifizierte Adresse wird bereits verwendet
    $1B5A    TCPIP-Konfigurationsmodul nicht vorhanden
    $FFFF    Funktionsblock arbeitet noch, bitte weiter aufrufen

    Eine Liste aller mîglichen Fehlermeldungen der TCPIP-Library finden Sie im
    Anhang @300[Fehlermeldungen].







                                       @020[ UDPopen ]                     @001[ öbersicht ]
.30
    UDPsend - Datagramm an eine Gegenstelle senden

    @031[UDPsend] (enable,cident,ipaddr,buffer,buflng,port,status)

    Parameter-Datentypen :
    ->  enable    : BIT           Der Funktionsblock wird nur ausgefÅhrt, wenn
                                  enable = 1 ist.
    ->  cident    : LONG          Connection Identifier (von @020[UDPopen]).
    ->  ipaddr    : LONG          IP-Adresse des EmpfÑngers. Die IP-Adresse ist
                                  die Åbliche Art der Adressierung in TCP/IP-
                                  Netzwerken.
    ->  buffer    : LONG          Adresse des Sendepuffers.
    ->  buflng    : WORD          LÑnge des Sendepuffers.
    ->  port      : WORD          TCP/IP-Port des EmpfÑngers.
                                  Wenn das gewÅnschte Zielport nicht dem (beim
                                  UDPopen-Aufruf) angegeben Port entspricht,
                                  kann hier das gewÅnschte Zielport definiert
                                  werden.



                                     @031[ Fortsetzung ]                   @001[ öbersicht ]
.31
    UDPsend - Datagramm an eine Gegenstelle senden (Fortsetzung)

    Parameter-Datentypen (Fortsetzung) :
    <-  @035[status    ]: WORD          Fehlernummer (0 = kein Fehler).
                                  Der Funktionsblock mu· solange freigegeben
                                  werden (siehe Parameter enable), bis an
                                  diesem Ausgang der Wert 0 ausgegeben wird.

    Mit Hilfe des Funktionsblocks UDPsend() kann ein benutzerdefinierter Daten-
    block Åber eine (mit @020[UDPopen]) aufgebaute Verbindung verschickt werden. Die
    Definition des zu sendenden Datenblocks erfolgt Åber die Parameter "buffer"
    und "buflng". Der Anwender ist fÅr die Interpretation der Daten selbst ver-
    antwortlich.
    öber den Eingangsparameter "port" kann das gewÅnschte Zielport angegebenen
    werden. Wenn das Zielport dem beim UDPopen-Aufruf angegebenen Port ent-
    spricht, kann dieser Eingang auf 0 gesetzt werden. 





                                     @032[ Fortsetzung ]                   @001[ öbersicht ]
.32
    UDPsend - Datagramm an eine Gegenstelle senden (Fortsetzung)

    Anmerkungen:
    Auf der RPS gibt es noch keine dynamische Mîglichkeit, die Teilnehmer am
    TCP/IP-Netzwerk zu benennen, deshalb wird auf die Basisreferenz (nÑmlich
    die IP-Adresse) zurÅckgegriffen.
    Die Portnummern unter 1024 sind durch TCPIP fÅr Systemdienste reserviert.














                                                                     @001[ öbersicht ]
.35
    UDPsend - Datagramm an eine Gegenstelle senden (Fortsetzung)

    <- Parameter <status    >: WORD

    Fehlernummern der Funktion UDPsend():
    $0000    UDPsend() erfolgreich durchgefÅhrt
    $5009    UngÅltiger Connection Identifier (Parameter "cident") Åbergeben
    $5026    Destination Adresse ungÅltig
    $5027    Daten kînnen nicht in einer Einheit transportiert werden
    $5031    Die angegebene Adresse ist nicht verfÅgbar
    $5033    Das Zielnetzwerk kann nicht erreicht werden
    $5037    Kein interner PNA-Puffer verfÅgbar  
    $FFFF    Der Funktionsblock mu· weiter aufgerufen werden

    Eine Liste aller mîglichen Fehlermeldungen der TCPIP-Library finden Sie im
    Anhang @300[Fehlermeldungen].





                                       @030[ UDPsend ]                     @001[ öbersicht ]
.40
    UDPrecv - Eingetroffenes Datagramm lesen

    @041[UDPrecv] (enable,cident,buffer,buflng,status,ipaddr,rxbuflng,port)

    Parameter-Datentypen :
    ->  enable    : BIT           Der Funktionsblock wird nur ausgefÅhrt, wenn
                                  enable = 1 ist.
    ->  cident    : LONG          Connection Identifier (von @020[UDPopen]).
    ->  buffer    : LONG          Adresse des Empfangspuffers.
    ->  buflng    : WORD          LÑnge des Empfangspuffers.
    <-  @045[status    ]: WORD          Fehlernummer (0 = kein Fehler).
                                  Der Funktionsblock mu· solange freigegeben
                                  werden (siehe Parameter enable), bis an
                                  diesem Ausgang der Wert 0 ausgegeben wird.
    <-  ipaddr    : LONG          IP-Adresse des Senders. IP-Adresse ist die
                                  Åbliche Art der Adressierung in TCP/IP-
                                  Netzwerken.
    <-  rxbuflng  : WORD          TatsÑchliche LÑnge der empfangenen Daten.
    <-  port      : WORD          TCP/IP-Port des Senders.


                                     @041[ Fortsetzung ]                   @001[ öbersicht ]
.41
    UDPrecv - Eingetroffenes Datagramm lesen (Fortsetzung)

    Mit Hilfe des Funktionsblocks UDPrecv() kann ein Datenblock Åber eine (mit
    @020[UDPopen]) aufgebaute Verbindung empfangen werden. Au·erdem kann mit diesem
    Funktionsblock ÅberprÅft werden, ob Åberhaupt ein Datenblock auf dieser
    Verbindung eingetroffen ist. Der fÅr die empfangenen Daten notwendige
    Speicher mu· vom Anwender zur VerfÅgung gestellt werden.

    Der fÅr die Daten benîtigte Speicher kann z.B. in Form eines entsprechend
    gro·en Feldes (Arrays) zur VerfÅgung gestellt werden. Es besteht auch die
    Mîglichkeit, den benîtigten Speicher Åber die Funktionen MEM_alloc() bzw.
    TMP_alloc() (siehe BURTRAP-Library) anzufordern.

    Anmerkungen:
    Auf der RPS gibt es noch keine dynamische Mîglichkeit, die Teilnehmer am
    TCP/IP-Netzwerk zu benennen, deshalb wird auf die Basisreferenz (nÑmlich
    die IP-Adresse) zurÅckgegriffen.
    Die Portnummern unter 1024 sind durch TCPIP fÅr Systemdienste reserviert.



                                                                     @001[ öbersicht ]
.45
    UDPrecv - Eingetroffenes Datagramm lesen (Fortsetzung)

    <- Parameter <status    >: WORD

    Fehlernummern der Funktion UDPrecv():
    $0000    UDPrecv() erfolgreich durchgefÅhrt
    $5009    UngÅltiger Connection Identifier (Parameter "cident") Åbergeben
    $5023    Kein Input vorhanden
    $FFFF    Der Funktionsblock mu· weiter aufgerufen werden

    Eine Liste aller mîglichen Fehlermeldungen der TCPIP-Library finden Sie im
    Anhang @300[Fehlermeldungen].









                                       @040[ UDPrecv ]                     @001[ öbersicht ]
.50
    UDPclose - Datagramm-Verbindung schlie·en

    @050[UDPclose] (enable,cident,status)

    Parameter-Datentypen :
    ->  enable    : BIT           Der Funktionsblock wird nur ausgefÅhrt, wenn
                                  enable = 1 ist.
    ->  cident    : LONG          Connection Identifier (von @020[UDPopen]). 
    <-  @055[status    ]: WORD          Fehlernummer (0 = kein Fehler).
                                  Der Funktionsblock mu· solange freigegeben
                                  werden (siehe Parameter enable), bis an
                                  diesem Ausgang der Wert 0 ausgegeben wird.

    Jede Verbindung benîtigt bestimmte Ressourcen (z.B. Speicher). Wird eine
    Verbindung nicht mehr verwendet, ist es sinnvoll, die entsprechende Ver-
    bindung (siehe Eingangsparameter "cident") mit Hilfe des Funktionsblocks 
    UDPclose() zu schlie·en und somit die verbindungsspezifischen Ressourcen
    wieder freizugeben.



                                                                     @001[ öbersicht ]
.55
    UDPclose - Datagramm-Verbindung schlie·en (Fortsetzung)

    <- Parameter <status    >: WORD

    Fehlernummern der Funktion UDPclose():
    $0000    UDPclose() erfolgreich durchgefÅhrt
    $5009    UngÅltiger Connection Identifier (Parameter "cident") Åbergeben
    $FFFF    Der Funktionsblock mu· weiter aufgerufen werden

    Eine Liste aller mîglichen Fehlermeldungen der TCPIP-Library finden Sie im
    Anhang @300[Fehlermeldungen].










                                      @050[ UDPclose ]                     @001[ öbersicht ]
.60
    ETHinfo - Infos zur Ethernet-Karte/-Verbindung

    @061[ETHinfo] (enable,statadr,ethadr)

    Parameter-Datentypen :
    ->  enable    : BIT           Der Funktionsblock wird nur ausgefÅhrt, wenn
                                  enable = 1 ist.
    <-  statadr   : LONG          Adresse eines Speicherbereichs in dem die
                                  Statistikdaten abgelegt sind.
    <-  ethadr    : LONG          Adresse eines Speicherbereichs in dem die
                                  Ethernet-Adresse abgelegt ist.

    Dieser Funktionsblock liefert die Adressen zweier Speicherbereiche, in
    denen die Statistikdaten und die Ethernet-Adresse abgelegt sind. öber
    die Statistikdaten kann der Anwender auf Treiber-Ebene die tatsÑchliche
    QualitÑt der öbertragung kontrollieren.





                                     @061[ Fortsetzung ]                   @001[ öbersicht ]
.61
    ETHinfo - Infos zur Ethernet-Karte/-Verbindung (Fortsetzung)

    Der Aufbau der Statistik ist abhÑngig vom verwendeten Hardware-Modul.
    Die Statistik fÅr das Modul IF101 hat den unten angegebenen Aufbau
    (Definition in C):

    typedef struct
    {
        /* operational statistics */
        unsigned long     l_int;            /* total number of interrupts */
        unsigned long     l_rint;           /* rcv interrupts             */
        unsigned long     l_tint;           /* xmt interrupts             */

        /* lance functioning errors */
        unsigned short    l_babl;           /* xmt timeout error          */
        unsigned short    l_cerr;           /* collision error            */
        unsigned short    l_miss;           /* miss packet error          */
        unsigned short    l_memr;           /* memory error               */



                                     @062[ Fortsetzung ]                   @001[ öbersicht ]
.62
    ETHinfo - Infos zur Ethernet-Karte/-Verbindung (Fortsetzung)

        /* receiver statistics */
        unsigned short    r_fram;           /* frame error                */
        unsigned short    r_oflo;           /* overflow error             */
        unsigned short    r_crc;            /* crc error                  */
        unsigned short    r_buff;           /* buffer error               */

        /* transmitter statistics */
        unsigned short    t_buff;           /* buffer error               */
        unsigned short    t_uflo;           /* silo underflow             */
        unsigned short    t_lcol;           /* late collision             */
        unsigned short    t_lcar;           /* lost carrier               */
        unsigned short    t_rtry;           /* set per 16 retries         */

        /* ni statistics */
        unsigned short    ni_anno;
        unsigned short    ni_init;
        unsigned short    ni_send;
        unsigned short    ni_getp;

                                     @063[ Fortsetzung ]                   @001[ öbersicht ]
.63
    ETHinfo - Infos zur Ethernet-Karte/-Verbindung (Fortsetzung)

        unsigned short    ni_retp;
        unsigned short    ni_bcst;
        unsigned short    ni_poll;
    } LANCE_STAT;















                                       @060[ ETHinfo ]                     @001[ öbersicht ]
.200
    ANHANG : LIBRARY-Informationen


    @201[< Allgemeines     >]      Voraussetzungen etc.

    @210[< Softwareaufbau  >]      Software fÅr die TCPIP-Protokollabwicklung

    @220[< Konfiguration   >]      TCPIP-Konfigurationsmodul

    @250[< Syntax          >]      Syntax fÅr die ErklÑrung der Funktionen

    @300[< Fehlernummern   >]      Zusammenfassung aller Fehlernummern

    







                                                                     @001[ öbersicht ]
.201
    TCPIP-Library : Allgemeines

    Ziel dieses Softwarepakets ist die effiziente Anbindung der Steuerungs-
    systeme B&R 2005 und B&R 2010 an gegebene Ethernet-Netzwerke mit dem
    Transportprotokoll TCP/IP. In der vorliegenden Version werden 
    Dienste zum Austausch von Datenpaketen Åber die Datagram Sockets reali-
    siert. Es ist somit mîglich, in einer Applikationssprache (PL2000, AWL
    oder KOP) einfache Client-/Server-Anwendungen zu programmieren. Die Ein-
    schrÑnkung auf Datagram Sockets stellt insofern keine BeschrÑnkung dar,
    da im Normalfall kleinere Datenpakete in einem logischen Punkt-zu-Punkt-
    Verkehr ausgetauscht werden.
    Der entsprechende Treiber ist auf den Schnittstellenmodulen IF101 und
    IF681 lauffÑhig. Diese Schnittstellenmodule besitzen eine Ethernet-
    Anbindung. Durch einen LANCE-kompatiblen Baustein wird ein effizienter
    Datenaustausch Åber DMA durchgefÅhrt. Der Ethernet-Baustein empfÑngt nur
    Broadcastmeldungen und Datenframes, die direkt fÅr ihn bestimmt sind.
    Dadurch verursacht eine hohe Netzlast nur dann eine entsprechende Last
    auf der Ethernet-Karte, wenn diese auch direkt betroffen ist.



                                     @202[ Fortsetzung ]                   @001[ öbersicht ]
.202
    TCPIP-Library : Allgemeines (Fortsetzung)

    Prinzipiell unterstÅtzt die TCP/IP-Kopplung TCP, UDP und ICMP. Derzeit
    sind in der TCPIP-Library allerdings nur Funktionsblîcke fÅr UDP reali-
    siert. Mit dem öbertragungsprotokoll UDP ("Datagram Sockets") ist ein
    nicht gesicherter, effizienter Datenaustausch zwischen zwei IP-Knoten
    mîglich. Die FunktionalitÑt entspricht z.B. einem Frame-Treiber.

    Anmerkungen:
    - Bevor Sie die Funktionen der TCPIP-Library in Ihrem Projekt verwenden
      kînnen, mÅssen Sie diese Library in die entsprechende Projekt-Datenbank
      importieren.

    - Voraussetzung fÅr die Verwendung der TCPIP-Library auf einer IF101 ist
      die Version V2.00 des Betriebssystems RPSSW. Wird die IF681 verwendet,
      mu· mindestens die Version V2.01 des Betriebssystems RPSSW benutzt
      werden.

    - Alle Funktionen der TCPIP-Library liefern im Fehlerfall als Ergebnis eine
      @300[Fehlernummer].

                                     @203[ Fortsetzung ]                   @001[ öbersicht ]
.203
    TCPIP-Library : Allgemeines (Fortsetzung)

    AbhÑngig von der verwendeten Version der TCPIP-Library mÅssen zusÑtzliche
    B&R-Module im nullspannungssicheren Speicher der Steuerung (Anwender-ROM)
    vorhanden sein:
 
    TCPIP-Library V1.0:
    FÅr die Verwendung dieser Version der TCPIP-Library ist es erforderlich,
    da· zusÑtzlich folgende B&R-Module im Anwender-ROM vorhanden sind:
    TCPIPMGR.BR ... Dieses B&R-Modul enthÑlt die FUBs, die Anbindung an die
                    BSD-Sockets, den LANCE-Treiber und die Einbettung in die
                    Systemsoftware. Ab dieser Version der TCPIP-Library ist
                    die TCPIP-Protokollsoftware (lizenzpflichtig!) ebenfalls
                    in das B&R-Modul TCPIPMGR.BR eingebunden. 
                    
    TCPIPCFG.BR ... TCPIP-Anwenderkonfiguration. Es sind auch Datenmodule mit
                    dem Namen "TCPIPCxx" zulÑssig, wobei xx beliebige, in
                    Datenmodulnamen zulÑssige Zeichen sein kînnen. Es darf
                    allerdings immer nur ein TCPIPCxx-Modul geladen sein.


                                       @200[ ANHANG ]                      @001[ öbersicht ]
.210
    TCPIP-Library : Softwareaufbau

    Der TCPIP-Manager entspricht einer eigenen Task, die eine Anbindung der
    Funktionsblîcke an die BSD-Sockets ermîglicht (Name des TCPIP-Managers
    im Profiler: tcpi). Jeder Funktionsblock-Aufruf fÅhrt zu einem Auftrag
    an den TCPIP-Manager. Dies bedeutet, da· bei jeder ersten Aktivierung
    eines Funktionsblocks am Funktionsblockausgang "status" der Wert $FFFF
    (busy) ausgegeben wird. Um eine vernÅnftige Abarbeitung zu gewÑhrleisten,
    mu· genÅgend Restzeit vorhanden sein. 
    Die Bedienung der "Sockets" erfolgt Åber den PNA-DÑmon (Name des PNA-
    DÑmons im Profiler: PNAD). Der PNAD wickelt das TCPIP-Protokoll ab und
    lÑuft mit einer Mindestzykluszeit von 100 ms. Er beauftragt den Treiber
    mit dem Senden von Ethernet-Paketen bzw. erhÑlt im Interrupt vom Treiber
    die VerstÑndigung, da· neue TCPIP- bzw. ARPA-Pakete eingetroffen sind.
    Die ICMP-Dienste (z.B. "PING") werden intern ohne BenutzeraktivitÑt
    abgewickelt. Die @220[TCPIP-Konfiguration] wird im Hochlauf aus dem TCPIP-
    Konfigurationsmodul TCPIPCxx.BR ausgelesen. Die beiden nichtzyklischen
    Tasks (TCPIP-Manager und PNA-DÑmon) sind so konfiguriert, da· sie mit
    einer niedrigeren PrioritÑt als die zyklischen Taskklassen laufen.


                                     @211[ Fortsetzung ]                   @001[ öbersicht ]
.211
    TCPIP-Library : Softwareaufbau (Fortsetzung)

    Der Hardware-Treiber verwendet derzeit 8 Input und 8 Output-Puffer. Eine
    Multicastbedienung wird nicht unterstÅtzt. Der Treiber liefert Statistik-
    daten (Informationen Åber den Datentransfer), die vom Anwender mit Hilfe
    eines Funktionsblocks ausgelesen werden kînnen. Der Treiber ist durch den
    Anwender nicht umkonfigurierbar.














                                       @200[ ANHANG ]                      @001[ öbersicht ]
.220
    TCPIP-Library : Konfiguration

    Bei der Konfiguration sind folgende Punkte zu beachten:
    - Der fÅr die TCPIP-Kommunikation notwendige Datenbereich wird aus dem
      Speicherbereich des Betriebssystemstacks zur VerfÅgung gestellt. Aus
      diesem Grund sollte der Betriebssystemstack eine Mindestgrî·e von $20000
      haben. Ausnahme: Bei der Version V1.0 der TCPIP-Library darf der Be-
      triebssystemstack bei Verwendung der IF260 nur auf den Wert $16000 ge-
      setzt werden (diese Limitierung gilt nur bis zur nÑchsten Version der
      TCPIP-Library). Die Grî·e des Betriebssystemstacks kann im PG2000 (in
      der Systemkonfiguration) festgelegt werden. Dazu rufen Sie die Funktion
      <Objekt><Parameter> aus der Task-Ebene der GDM auf. Der Cursor mu· sich
      dabei auf dem "sysconf"-Symbol befinden. Anschlie·end kînnen Sie durch
      Anwahl der Funktion <Betriebssystem> (siehe Popup-MenÅ des Feldes
      <Konfiguriere>) eine Dialogbox zum Festlegen allgemeiner Systemparameter
      îffnen. In dieser Dialogbox kînnen Sie die Grî·e des Betriebssystemstacks
      (siehe Eingabefeld <Daten/Stack>) verÑndern.




                                     @221[ Fortsetzung ]                   @001[ öbersicht ]
.221
    TCPIP-Library : Konfiguration (Fortsetzung)

    Bei der Konfiguration sind folgende Punkte zu beachten (Fortsetzung):
    - Die Kommunikation zwischen den Funktionsblîcken und TCPIPMGR benîtigt
      eine Queue. Im Normalfall ist jedoch die Anzahl der standardmÑ·ig
      konfigurierten Queues ausreichend.
    - Die Konfiguration wird erst nach einem Kaltstart Åbernommen.














                                     @222[ Fortsetzung ]                   @001[ öbersicht ]
.222
    TCPIP-Library : Konfiguration (Fortsetzung)

    Das TCPIP-Konfigurationsmodul (Standard-Datenmodul) hat folgenden Aufbau:

    $0000,           ; version indication - fixed to zero
    $c0224781        ; IP-Addr: 192.34.71.xx
    $0000,           ; reserved - fixed to zero
    $0005,           ; number of available sockets (pNA+)
    $0018,           ; number of available descriptors (pNA+)
    $0040,           ; number of memory buffers (pNA+)
    $0010,           ; number of pages (pNA+)
    $ffff0000,       ; SubNet Maske
    00000000,        ; reserved 1
    00000000,        ; reserved 2
    00000000,        ; reserved 3
    00000000,        ; reserved 4
    00000000,        ; reserved 5
    00000000,        ; reserved 6
    00000000,        ; reserved 7


                                     @223[ Fortsetzung ]                   @001[ öbersicht ]
.223
    TCPIP-Library : Konfiguration (Fortsetzung)

    ErklÑrungen zum TCPIP-Konfigurationsmodul:
    - Die IP-Adresse wird in einem Longwort beschrieben.
    - Die Anzahl der Sockets entspricht der maximal mîglichen Anzahl paralleler
      UDPopen-Aufrufe.
    - Die Anzahl der verfÅgbaren Descriptoren, Speicherbuffer (zu 128 Byte)
      und Pages beschreibt interne Elemente von pNA+.
    - Die SubNetMaske ist fÅr die Netzwerk-EinschrÑnkung notwendig.

    Durch die Parametrierung von einigen Parametern kann sich der Speicherbedarf
    wesentlich verÑndern.









                                       @200[ ANHANG ]                      @001[ öbersicht ]
.250
    TCPIP-Library : Syntaxbeschreibung

    Datentypen:
    FÅr viele Funktionen sind bestimmte Gruppen von Datentypen zulÑssig. Um
    bei der Funktionsbeschreibung nicht alle zulÑssigen Datentypen anfÅhren
    zu mÅssen, werden folgende Gruppenbezeichnungen eingefÅhrt:
    …ÕÕÕÕÕÕÕÕÀÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕª
    ∫ Gruppe ∫  BIT  ≥ INT8  ≥ BYTE  ≥ INT16 ≥ WORD  ≥ INT32 ≥ LONG  ≥ FLOAT ∫
    ÃÕÕÕÕÕÕÕÕŒÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕπ
    ∫ BASIS  ∫       ≥   x   ≥   x   ≥   x   ≥   x   ≥   x   ≥   x   ≥       ∫
    «ƒƒƒƒƒƒƒƒ◊ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ∂
    ∫ NICHT  ∫   x   ≥   x   ≥   x   ≥   x   ≥   x   ≥   x   ≥   x   ≥       ∫
    ∫ FLOAT  ∫       ≥       ≥       ≥       ≥       ≥       ≥       ≥       ∫
    «ƒƒƒƒƒƒƒƒ◊ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ∂
    ∫ ALLE   ∫   x   ≥   x   ≥   x   ≥   x   ≥   x   ≥   x   ≥   x   ≥   x   ∫
    «ƒƒƒƒƒƒƒƒ◊ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ∂
    ∫ FELD   ∫  [x]  ≥  [x]  ≥  [x]  ≥  [x]  ≥  [x]  ≥  [x]  ≥  [x]  ≥  [x]  ∫
    »ÕÕÕÕÕÕÕÕ ÕÕÕÕÕÕÕœÕÕÕÕÕÕÕœÕÕÕÕÕÕÕœÕÕÕÕÕÕÕœÕÕÕÕÕÕÕœÕÕÕÕÕÕÕœÕÕÕÕÕÕÕœÕÕÕÕÕÕÕº
      x  Datentyp ist zulÑssig
     [x] Datentyp ist zulÑssig als Feldvariable oder Zeichenkette (String)

                                     @251[ Fortsetzung ]                   @001[ öbersicht ]
.251
    TCPIP-Library : Syntaxbeschreibung (Fortsetzung)

    Pfeile:
    FÅr die Darstellung von Eingangs- und Ausgangsparametern werden Pfeile
    verwendet. Dabei gilt folgende Vereinbarung:
    …ÕÕÕÕÕÕÕÕÕÀÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕª
    ∫  Pfeil  ∫  Bedeutung                                                   ∫
    ÃÕÕÕÕÕÕÕÕÕŒÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕπ
    ∫   ->    ∫  Eingangsparameter                                           ∫
    «ƒƒƒƒƒƒƒƒƒ◊ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∂
    ∫   <->   ∫  Ein-/Ausgangsparameter. Funktionell ist es ein Ausgangs-    ∫
    ∫         ∫  parameter. öblicherweise wird er aber vor dem Aufruf der    ∫
    ∫         ∫  Funktion mit einer bestimmten Information geladen (z.B.     ∫
    ∫         ∫  einer Adresse). Meist wird die Adresse einer Variable mit   ∫
    ∫         ∫  adr() [PL2000] oder einem Adre·kontakt [KOP] angeschlossen. ∫
    «ƒƒƒƒƒƒƒƒƒ◊ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∂
    ∫   <-    ∫  Ausgangsparameter                                           ∫
    »ÕÕÕÕÕÕÕÕÕ ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕº



                                     @252[ Fortsetzung ]                   @001[ öbersicht ]
.252
    TCPIP-Library : Syntaxbeschreibung (Fortsetzung)

    Funktionsblîcke:
    Funktionsblîcke sind in dieser Online-Hilfe nicht grafisch dargestellt.
    Sie finden aber alle fÅr Funktionsblîcke relevanten Informationen, wie
    Eingangsparameter (->), Ein-/Ausgangsparameter (<->) und Ausgangsparameter
    (<-) in der Online-Hilfe.














                                       @200[ ANHANG ]                      @001[ öbersicht ]
.300
    TCPIP-Library : Fehlernummern der Funktionsblîcke

    Die folgende Liste ist eine Zusammenfassung aller mîglichen Fehlermeldungen
    der TCPIP-Library:

    $0000    Funktionsblock erfolgreich durchgefÅhrt
    $5017    Interner PNA-Tabellen-Overflow
    $5023    Kein Input vorhanden
    $5026    Destination Adresse ungÅltig
    $5027    Daten kînnen nicht in einer Einheit transportiert werden
    $5030    Die spezifizierte Adresse wird bereits verwendet
    $5031    Die angegebene Adresse ist nicht verfÅgbar
    $5033    Das Zielnetzwerk kann nicht erreicht werden
    $5037    Kein interner PNA-Puffer verfÅgbar  
    $7002    TCPIP-Konfigurationsmodul nicht vorhanden
    $FFFF    Funktionsblock arbeitet noch, bitte weiter aufrufen





                                       @200[ ANHANG ]                      @001[ öbersicht ]

.End
