%%
1,0:1
%%
.1
    Funktionen der Datenspeicher-Library

  …ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕª
  ∫ ACHTUNG: Da die Datenspeicher-Library AVT-Funktionen enthÑlt, kînnen      ∫
  ∫          die Funktionen dieser Library nur verwendet werden, wenn das     ∫
  ∫          B&R-Modul DM_LIB.BR im nullspannungssicheren Speicher (Anwender- ∫
  ∫          Flash-PROM) der Steuerung vorhanden ist!                         ∫
  ∫          Wenn mehrere 64-KByte-Blîcke verwendet werden (siehe Funktion    ∫
  ∫          DMxclear(), DMxstore() und DMxfree()), mu· zusÑtzlich das        ∫
  ∫          Datenmodul CFGDMLIB.BR in den nullspannungssicheren Speicher     ∫
  ∫          (Anwender-Flash-PROM) der Steuerung Åbertragen werden.           ∫
  ∫          Nach dem öbertragen dieser Module in den nullspannungssicheren   ∫
  ∫          Speicher mu· ein KALTSTART (frÅher "TOTALINIT" genannt) durch-   ∫
  ∫          gefÅhrt werden.                                                  ∫
  »ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕº






                                     @002[ Fortsetzung ]               @999[ HILFE beenden ]
.2
    Funktionen der Datenspeicher-Library (Fortsetzung)

    Nach dem Importieren der Datenspeicher-Library stehen Ihnen folgende
    Funktionen zur VerfÅgung:

    @020[DMclear ] Datenspeicher im letzten 64-KByte-Block des Flash-PROMs lîschen
    @030[DMstore ] Datenmodul im letzten 64-KByte-Block des Flash-PROMs ablegen
    @040[DMfree  ] Grî·e des verfÅgbaren Datenspeichers im letzten 64-KByte-Block
             des Flash-PROMs feststellen
    @050[DMxclear] Datenspeicher des x-ten 64-KByte-Blocks des Flash-PROMs lîschen
    @060[DMxstore] Datenmodul im x-ten 64-KByte-Block des Flash-PROMs ablegen
    @070[DMxfree ] Grî·e des verfÅgbaren Datenspeichers im x-ten 64-KByte-Block
             des Flash-PROMs feststellen

    Mit den Funktionen der Datenspeicher-Library stehen dem Anwender (neben den
    Datenmodul-Funktionen der BURTRAP-Library) somit zusÑtzliche Funktionen fÅr
    die Datenmodul-Behandlung zur VerfÅgung.




                                       @200[ ANHANG ]                      @001[ öbersicht ]
.20
    DMclear - Datenspeicher im letzten 64-KByte-Block lîschen

    @020[DMclear] (enable,status)

    Parameter-Datentypen :
    ->  @025[enable    ]: BIT           Der Funktionsblock wird nur ausgefÅhrt, wenn
                                  enable = 1 ist.
    <-  @026[status    ]: WORD          Fehlernummer (0 = kein Fehler)

    Mit dem Funktionsblock DMclear() kann der Datenspeicher (DMEMORY) im
    letzten 64-KByte-Block des Anwender-Flash-PROMs gelîscht werden. WÑhrend
    des Lîschens des Anwender-Flash-PROMs sind alle anderen Funktionen der
    RPS blockiert.








                                                                     @001[ öbersicht ]
.25
    DMclear - Datenspeicher im letzten 64-KByte-Block lîschen (Fortsetzung)

    -> Parameter <enable    >: BIT

    Wenn der Eingangsparameter "enable" = 1 ist, wird der letzte 64 KByte gro·e
    Block des Anwender-Flash-PROMs gelîscht und alle darin eingetragenen Module
    werden aus den Systemtabellen entfernt.














                                       @020[ DMclear ]                     @001[ öbersicht ]
.26
    DMclear - Datenspeicher im letzten 64-KByte-Block lîschen (Fortsetzung)

    <- Parameter <status    >: WORD

    Fehlernummern der Funktion DMclear():
    6383    Kein freier 64-KByte-Block im Anwender-Flash-PROM vorhanden
            (-> Anwender-Flash-PROM lîschen)
    6385    CPU-Typ wird nicht unterstÅtzt
    6386    Interner Fehler - keine Root-Task vorhanden
    6389    Internes DMEMORY-Handle 0 oder ungÅltig (-> Speicherfehler)
    6394    B&R-Modul DM_LIB.BR wurde gelîscht (-> neuerlich Laden, Brennen
            und KALTSTART) oder es wurde nur ein WARMSTART durchgefÅhrt
    6395    Datenspeicher (DMEMORY) wird gerade von einem anderen Funktions-
            block der Datenspeicher-Library bearbeitet

    Eine Liste aller mîglichen Fehlermeldungen der Datenspeicher-Library
    finden Sie im Anhang @300[Fehlermeldungen].




                                       @020[ DMclear ]                     @001[ öbersicht ]
.30
    DMstore - Datenmodul im letzten 64-KByte-Block ablegen

    @031[DMstore] (enable,adr(name),data,size,ident,status)

    Parameter-Datentypen :
    ->  enable    : BIT           Der Funktionsblock wird nur ausgefÅhrt, wenn
                                  enable = 1 ist.
    ->  name      : BYTE (FELD)   Name des zu generierenden Datenmoduls als
                                  String. Existiert bereits ein Modul mit
                                  diesem Namen, so wird am Ausgang status
                                  eine entsprechende Fehlermeldung ausgegeben.
                                  Der String kann auf zwei verschiedene Arten
                                  angegeben werden:
                                  adr(name)  Adresse der BYTE-Feldvariable,
                                             die den String enthÑlt.
                                  "name"     Konstanter String (mu· in AnfÅh-
                                             rungszeichen angegeben werden!).
    ->  data      : LONG          Adresse auf die Daten, die in die Daten-
                                  sektion des neuen Datenmoduls kopiert werden
                                  sollen.

                                     @031[ Fortsetzung ]                   @001[ öbersicht ]
.31
    DMstore - Datenmodul im letzten 64-KByte-Block ablegen (Fortsetzung)

    Parameter-Datentypen (Fortsetzung) :
    ->  size      : LONG          Mit diesem Parameter wird die Grî·e der
                                  Datensektion definiert.
    ->  @035[ident     ]: LONG          Wird an diesem Eingang die gÅltige Ident-
                                  Nummer eines Datenmoduls angegeben, so
                                  werden alle Sektionen dieses Referenz-
                                  moduls fÅr die Erzeugung des neuen Daten-
                                  moduls herangezogen. Die Datensektion
                                  des Moduls wird durch den (mit dem Parameter
                                  data) angegebenen Datenbereich ersetzt.
                                  Die DatenlÑnge des Referenzmoduls mu· der
                                  (mit dem Parameter size) festgelegten Daten-
                                  lÑnge entsprechen.
    <-  @036[status    ]: WORD          Fehlernummer (0 = kein Fehler)

    Mit dem Funktionsblock DMstore() kann ein Datenmodul im Datenspeicher
    des letzten 64-KByte-Blocks abgelegt werden.


                                     @032[ Fortsetzung ]                   @001[ öbersicht ]
.32
    DMstore - Datenmodul im letzten 64-KByte-Block ablegen (Fortsetzung)

    Das Speichern im Flash-PROM erfolgt in 32-Byte-Blîcken. Das Datenmodul
    wird direkt im Flash-PROM generiert (kein zusÑtzlicher Speicherbedarf).
    WÑhrend ein Block (32 Byte) ins Anwender-Flash-PROM gespeichert wird,
    sind alle anderen Funktionen der RPS blockiert.















                                                                     @001[ öbersicht ]
.35
    DMstore - Datenmodul im letzten 64-KByte-Block ablegen (Fortsetzung)

    -> Parameter <ident     >: LONG

    Wird am Eingang "ident" die gÅltige Ident-Nummer eines existierenden Daten-
    moduls angegeben, so werden alle Sektionen dieses Datenmoduls (Referenz-
    moduls) fÅr die Erzeugung des neuen Datenmoduls herangezogen. Die Daten-
    sektion des Moduls wird durch den (mit dem Parameter "data") angegebenen
    Datenbereich ersetzt. Die DatenlÑnge des Referenzmoduls mu· der (mit dem
    Parameter "size") festgelegten DatenlÑnge entsprechen.

    Anmerkung:
    Die Ident-Nummer eines existierenden Datenmoduls kann mit der Funktion
    DA_ident() der BURTRAP-Library ermittelt werden.







                                       @030[ DMstore ]                     @001[ öbersicht ]
.36
    DMstore - Datenmodul im letzten 64-KByte-Block ablegen (Fortsetzung)

    <- Parameter <status    >: WORD

    Fehlernummern der Funktion DMstore():
    6383    Kein freier 64-KByte-Block im Anwender-Flash-PROM vorhanden
            (-> Anwender-Flash-PROM lîschen)
    6385    CPU-Typ wird nicht unterstÅtzt
    6386    Interner Fehler - keine Root-Task vorhanden
    6389    Internes DMEMORY-Handle 0 oder ungÅltig (-> Speicherfehler)
    6390    DMEMORY voll -> Funktion DMclear() aufrufen
    6391    Parameter "ident" nicht gÅltig oder falscher Modultyp
    6392    Die DatenlÑnge der Datensektion des Referenzmoduls stimmt nicht
            mit dem Parameter "size" Åberein
    6393    Es existiert bereits ein Modul mit dem angegebenen Namen
    6394    B&R-Modul DM_LIB.BR wurde gelîscht (-> neuerlich Laden, Brennen
            und KALTSTART) oder es wurde nur ein WARMSTART durchgefÅhrt
    6395    Datenspeicher (DMEMORY) wird gerade von einem anderen Funktions-
            block der Datenspeicher-Library bearbeitet


                                     @037[ Fortsetzung ]                   @001[ öbersicht ]
.37
    DMstore - Datenmodul im letzten 64-KByte-Block ablegen (Fortsetzung)

    6396    FÅr den Parameter "data" wurde ein nichtinitialisierter Zeiger
            (Null Pointer) Åbergeben
    8022    Modultabelle voll -> vergrî·ern Sie in der Systemkonfiguration
            ("sysconf"-Modul) die maximale Anzahl der B&R-Module auf der RPS
    9002    Syntax des Modulnamens nicht gÅltig (Sonderzeichen!)

    Eine Liste aller mîglichen Fehlermeldungen der Datenspeicher-Library
    finden Sie im Anhang @300[Fehlermeldungen].











                                       @030[ DMstore ]                     @001[ öbersicht ]
.40
    DMfree - Grî·e des verfÅgbaren Datenspeichers feststellen

    @040[DMfree] (enable,size,status)

    Parameter-Datentypen :
    ->  enable    : BIT           Der Funktionsblock wird nur ausgefÅhrt, wenn
                                  enable = 1 ist.
    <-  size      : LONG          Der hier angegebene Wert entspricht dem
                                  freien Speicher im Datenspeicher des letzten
                                  64-KByte-Blocks (Angabe in Byte).
    <-  @045[status    ]: WORD          Fehlernummer (0 = kein Fehler)

    Mit dem Funktionsblock DMfree() kann die Grî·e des freien Speichers im
    Datenspeicher des letzten 64-KByte-Blocks festgestellt werden.







                                                                     @001[ öbersicht ]
.45
    DMfree - Grî·e des verfÅgbaren Datenspeichers feststellen (Fortsetzung)

    <- Parameter <status    >: WORD

    Fehlernummern der Funktion DMfree():
    6383    Kein freier 64-KByte-Block im Anwender-Flash-PROM vorhanden
            (-> Anwender-Flash-PROM lîschen)
    6385    CPU-Typ wird nicht unterstÅtzt
    6386    Interner Fehler - keine Root-Task vorhanden
    6389    Internes DMEMORY-Handle 0 oder ungÅltig (-> Speicherfehler)
    6394    B&R-Modul DM_LIB.BR wurde gelîscht (-> neuerlich Laden, Brennen
            und KALTSTART) oder es wurde nur ein WARMSTART durchgefÅhrt

    Eine Liste aller mîglichen Fehlermeldungen der Datenspeicher-Library
    finden Sie im Anhang @300[Fehlermeldungen].






                                       @040[ DMfree ]                      @001[ öbersicht ]
.50
    DMxclear - Datenspeicher im x-ten 64-KByte-Block lîschen

    @050[DMxclear] (enable,block_no,status)

    Parameter-Datentypen :
    ->  @055[enable    ]: BIT           Der Funktionsblock wird nur ausgefÅhrt, wenn
                                  enable = 1 ist.
    ->  block_no  : BYTE          Mit diesem Parameter kann die Blocknummer des
                                  64-KByte-Blocks im Anwender-Flash-PROM ange-
                                  geben werden:
                                  1 ... letzter 64-KByte-Block
                                  2 ... vorletzter 64-KByte-Block
                                  usw.
    <-  @056[status    ]: WORD          Fehlernummer (0 = kein Fehler)

    Mit dem Funktionsblock DMxclear() kann der Datenspeicher (DMEMORY) eines
    64-KByte-Blocks in Anwender-Flash-PROM gelîscht werden. WÑhrend des
    Lîschens des Anwender-Flash-PROMs sind alle anderen Funktionen der RPS
    blockiert.


                                                                     @001[ öbersicht ]
.55
    DMxclear - Datenspeicher im x-ten 64-KByte-Block lîschen (Fortsetzung)

    -> Parameter <enable    >: BIT

    Wenn der Eingangsparameter "enable" = 1 ist, wird der (mit dem Parameter
    "block_no") angegebene 64 KByte gro·e Block des Anwender-Flash-PROMs ge-
    lîscht und alle darin eingetragenen Module werden aus den Systemtabellen
    entfernt.













                                      @050[ DMxclear ]                     @001[ öbersicht ]
.56
    DMxclear - Datenspeicher im x-ten 64-KByte-Block lîschen (Fortsetzung)

    <- Parameter <status    >: WORD

    Fehlernummern der Funktion DMxclear():
    6383    Kein freier 64-KByte-Block im Anwender-Flash-PROM vorhanden
            (-> Anwender-Flash-PROM lîschen)
    6385    CPU-Typ wird nicht unterstÅtzt
    6386    Interner Fehler - keine Root-Task vorhanden
    6389    Internes DMEMORY-Handle 0 oder ungÅltig (-> Speicherfehler)
    6394    B&R-Modul DM_LIB.BR wurde gelîscht (-> neuerlich Laden, Brennen
            und KALTSTART) oder es wurde nur ein WARMSTART durchgefÅhrt
    6395    Datenspeicher (DMEMORY) wird gerade von einem anderen Funktions-
            block der Datenspeicher-Library bearbeitet
    6396    In der Funktion DMxclear() ist intern ein Null Pointer (nicht-
            initialisierter Zeiger) gesetzt
    6398    Die angegebene Blocknummer ("block_no") ist grî·er, als im Daten-
            modul CFGDMLIB definiert



                                     @057[ Fortsetzung ]                   @001[ öbersicht ]
.57
    DMxclear - Datenspeicher im x-ten 64-KByte-Block lîschen (Fortsetzung)

    Eine Liste aller mîglichen Fehlermeldungen der Datenspeicher-Library
    finden Sie im Anhang @300[Fehlermeldungen].

















                                      @050[ DMxclear ]                     @001[ öbersicht ]
.60
    DMxstore - Datenmodul im x-ten 64-KByte-Block ablegen

    @061[DMxstore] (enable,block_no,adr(name),data,size,ident,status)

    Parameter-Datentypen :
    ->  enable    : BIT           Der Funktionsblock wird nur ausgefÅhrt, wenn
                                  enable = 1 ist.
    ->  block_no  : BYTE          Mit diesem Parameter kann die Blocknummer des
                                  64-KByte-Blocks im Anwender-Flash-PROM ange-
                                  geben werden:
                                  1 ... letzter 64-KByte-Block
                                  2 ... vorletzter 64-KByte-Block
                                  usw.








                                     @061[ Fortsetzung ]                   @001[ öbersicht ]
.61
    DMxstore - Datenmodul im x-ten 64-KByte-Block ablegen (Fortsetzung)

    Parameter-Datentypen (Fortsetzung) :
    ->  name      : BYTE (FELD)   Name des zu generierenden Datenmoduls als
                                  String. Existiert bereits ein Modul mit
                                  diesem Namen, so wird am Ausgang status
                                  eine entsprechende Fehlermeldung ausgegeben.
                                  Der String kann auf zwei verschiedene Arten
                                  angegeben werden:
                                  adr(name)  Adresse der BYTE-Feldvariable,
                                             die den String enthÑlt.
                                  "name"     Konstanter String (mu· in AnfÅh-
                                             rungszeichen angegeben werden!).
    ->  data      : LONG          Adresse auf die Daten, die in die Daten-
                                  sektion des neuen Datenmoduls kopiert werden
                                  sollen.
    ->  size      : LONG          Mit diesem Parameter wird die Grî·e der
                                  Datensektion definiert.



                                     @062[ Fortsetzung ]                   @001[ öbersicht ]
.62
    DMxstore - Datenmodul im x-ten 64-KByte-Block ablegen (Fortsetzung)

    Parameter-Datentypen (Fortsetzung) :
    ->  @065[ident     ]: LONG          Wird an diesem Eingang die gÅltige Ident-
                                  Nummer eines Datenmoduls angegeben, so
                                  werden alle Sektionen dieses Referenz-
                                  moduls fÅr die Erzeugung des neuen Daten-
                                  moduls herangezogen. Die Datensektion
                                  des Moduls wird durch den (mit dem Parameter
                                  data) angegebenen Datenbereich ersetzt.
                                  Die DatenlÑnge des Referenzmoduls mu· der
                                  (mit dem Parameter size) festgelegten Daten-
                                  lÑnge entsprechen.
    <-  @066[status    ]: WORD          Fehlernummer (0 = kein Fehler)

    Mit dem Funktionsblock DMxstore() kann ein Datenmodul im Datenspeicher
    eines 64-KByte-Blocks abgelegt werden.
    Das Speichern im Flash-PROM erfolgt in 32-Byte-Blîcken. Das Datenmodul
    wird direkt im Flash-PROM generiert (kein zusÑtzlicher Speicherbedarf).
    WÑhrend ein Block (32 Byte) ins Anwender-Flash-PROM gespeichert wird,
    sind alle anderen Funktionen der RPS blockiert.
                                                                     @001[ öbersicht ]
.65
    DMxstore - Datenmodul im x-ten 64-KByte-Block ablegen (Fortsetzung)

    -> Parameter <ident     >: LONG

    Wird am Eingang "ident" die gÅltige Ident-Nummer eines existierenden Daten-
    moduls angegeben, so werden alle Sektionen dieses Datenmoduls (Referenz-
    moduls) fÅr die Erzeugung des neuen Datenmoduls herangezogen. Die Daten-
    sektion des Moduls wird durch den (mit dem Parameter "data") angegebenen
    Datenbereich ersetzt. Die DatenlÑnge des Referenzmoduls mu· der (mit dem
    Parameter "size") festgelegten DatenlÑnge entsprechen.

    Anmerkung:
    Die Ident-Nummer eines existierenden Datenmoduls kann mit der Funktion
    DA_ident() der BURTRAP-Library ermittelt werden.







                                      @060[ DMxstore ]                     @001[ öbersicht ]
.66
    DMxstore - Datenmodul im x-ten 64-KByte-Block ablegen (Fortsetzung)

    <- Parameter <status    >: WORD

    Fehlernummern der Funktion DMxstore():
    6383    Kein freier 64-KByte-Block im Anwender-Flash-PROM vorhanden
            (-> Anwender-Flash-PROM lîschen)
    6385    CPU-Typ wird nicht unterstÅtzt
    6386    Interner Fehler - keine Root-Task vorhanden
    6389    Internes DMEMORY-Handle 0 oder ungÅltig (-> Speicherfehler)
    6390    DMEMORY voll -> Funktion DMclear() aufrufen
    6391    Parameter "ident" nicht gÅltig oder falscher Modultyp
    6392    Die DatenlÑnge der Datensektion des Referenzmoduls stimmt nicht
            mit dem Parameter "size" Åberein
    6393    Es existiert bereits ein Modul mit dem angegebenen Namen
    6394    B&R-Modul DM_LIB.BR wurde gelîscht (-> neuerlich Laden, Brennen
            und KALTSTART) oder es wurde nur ein WARMSTART durchgefÅhrt
    6395    Datenspeicher (DMEMORY) wird gerade von einem anderen Funktions-
            block der Datenspeicher-Library bearbeitet


                                     @067[ Fortsetzung ]                   @001[ öbersicht ]
.67
    DMxstore - Datenmodul im x-ten 64-KByte-Block ablegen (Fortsetzung)

    6396    FÅr den Parameter "data" wurde ein nichtinitialisierter Zeiger
            (Null Pointer) Åbergeben
    6398    Die angegebene Blocknummer ("block_no") ist grî·er, als im Daten-
            modul CFGDMLIB definiert
    8022    Modultabelle voll -> vergrî·ern Sie in der Systemkonfiguration
            ("sysconf"-Modul) die maximale Anzahl der B&R-Module auf der RPS
    9002    Syntax des Modulnamens nicht gÅltig (Sonderzeichen!)

    Eine Liste aller mîglichen Fehlermeldungen der Datenspeicher-Library
    finden Sie im Anhang @300[Fehlermeldungen].









                                      @060[ DMxstore ]                     @001[ öbersicht ]
.70
    DMxfree - Grî·e des verfÅgbaren Datenspeichers feststellen

    @071[DMxfree] (enable,block_no,size,status)

    Parameter-Datentypen :
    ->  enable    : BIT           Der Funktionsblock wird nur ausgefÅhrt, wenn
                                  enable = 1 ist.
    ->  block_no  : BYTE          Mit diesem Parameter kann die Blocknummer des
                                  64-KByte-Blocks im Anwender-Flash-PROM ange-
                                  geben werden:
                                  1 ... letzter 64-KByte-Block
                                  2 ... vorletzter 64-KByte-Block
                                  usw.
    <-  size      : LONG          Der hier angegebene Wert entspricht dem
                                  freien Speicher im Datenspeicher des (mit
                                  dem Parameter block_no) festgelegten
                                  64-KByte-Blocks (Angabe in Byte).
    <-  @075[status    ]: WORD          Fehlernummer (0 = kein Fehler)



                                     @071[ Fortsetzung ]                   @001[ öbersicht ]
.71
    DMxfree - Grî·e des verfÅgbaren Datenspeichers feststellen (Fortsetzung)

    Mit dem Funktionsblock DMxfree() kann die Grî·e des freien Speichers im
    Datenspeicher des angegebenen 64-KByte-Blocks festgestellt werden.

















                                                                     @001[ öbersicht ]
.75
    DMxfree - Grî·e des verfÅgbaren Datenspeichers feststellen (Fortsetzung)

    <- Parameter <status    >: WORD

    Fehlernummern der Funktion DMxfree():
    6383    Kein freier 64-KByte-Block im Anwender-Flash-PROM vorhanden
            (-> Anwender-Flash-PROM lîschen)
    6385    CPU-Typ wird nicht unterstÅtzt
    6386    Interner Fehler - keine Root-Task vorhanden
    6389    Internes DMEMORY-Handle 0 oder ungÅltig (-> Speicherfehler)
    6394    B&R-Modul DM_LIB.BR wurde gelîscht (-> neuerlich Laden, Brennen
            und KALTSTART) oder es wurde nur ein WARMSTART durchgefÅhrt
    6398    Die angegebene Blocknummer ("block_no") ist grî·er, als im Daten-
            modul CFGDMLIB definiert

    Eine Liste aller mîglichen Fehlermeldungen der Datenspeicher-Library
    finden Sie im Anhang @300[Fehlermeldungen].




                                       @070[ DMxfree ]                     @001[ öbersicht ]
.200
    ANHANG : LIBRARY-Informationen


    @201[< Allgemeines            >]    Voraussetzungen etc.

    @210[< UnterstÅtzte Hardware  >]    Liste der unterstÅtzten Hardware-Module

    @220[< Datenmodul CFGDMLIB.BR >]    Datenmodul CFGDMLIB.BR

    @250[< Syntax                 >]    Syntax fÅr die ErklÑrung der Funktionen

    @300[< Fehlernummern          >]    Zusammenfassung aller Fehlernummern

    @400[< History                >]    Neue FunktionalitÑten und VersionsÑnderungen







                                                                     @001[ öbersicht ]
.201
    Datenspeicher-Library : Allgemeines

    Bei den meisten Prozessoren mit Flash-PROM-Speicher (siehe Liste der
    @210[unterstÅtzten Hardware-Module]) wurde der Funktionsumfang des Betriebs-
    systems RPSSW um einen Flash-PROM-Speicherbereich (Datenspeicher), der
    von der Anwendung gelîscht werden kann, erweitert. Alle austauschbaren
    Anwenderspeicher werden von dieser Betriebssystem-Erweiterung nicht
    unterstÅtzt.
    Ist die Betriebssystem-Erweiterung (B&R-Modul DM_LIB.BR) fÅr diesen
    Datenspeicher im Flash-PROM installiert, wird die letzte 64-KByte-Bank
    des Anwender-Flash-PROMs aus der allgemeinen Verwaltung ausgehÑngt.
    Mit den DMx-Funktionsblîcken (DMxclear(), DMxstore() und DMxfree())
    kînnen mehrere 64-KByte-Blîcke am Ende des Anwender-Flash-PROMs bedient
    werden. Die Anzahl der 64-KByte-Blîcke, welche im Anwender-Flash-PROM
    fÅr die Behandlung mit den DMx-Funktionsblîcken reserviert werden, wird
    mit dem Datenmodul @220[CFGDMLIB.BR] festgelegt.





                                     @202[ Fortsetzung ]                   @001[ öbersicht ]
.202
    Datenspeicher-Library : Allgemeines (Fortsetzung)

    öber die Funktionsblîcke der Datenspeicher-Library kann der Anwender in
    diesem Bereich B&R-Datenmodule installieren. ZusÑtzlich hat der Anwender
    auch die Mîglichkeit, diesen Bereich mit einem Funktionsblock zu lîschen.
    Mit dem PG2000 werden B&R-Datenmodule im Datenspeicher nicht explizit
    ausgewiesen. Sie werden wie ein Modul im Flash-PROM behandelt. Aus diesem
    Grund stehen dem Anwender die Funktionen "Lîschen" und "Upload" zur Ver-
    fÅgung. Ein Download in den Datenspeicher ist mit dem PG2000 jedoch nicht
    mîglich.
    Beim Lîschen des Anwender-Flash-PROMs mit dem PG2000 wird auch die letzte
    Bank (oder letzten BÑnke) des Flash-PROMs gelîscht. Dadurch werden auch
    die darin befindlichen Module gelîscht.








                                     @203[ Fortsetzung ]                   @001[ öbersicht ]
.203
    Datenspeicher-Library : Allgemeines (Fortsetzung)

    Anmerkungen:
    - Bevor Sie die Funktionen der Datenspeicher-Library in Ihrem Projekt
      verwenden kînnen, mÅssen Sie die Library in die entsprechende Projekt-
      Datenbank importieren.

    - Da die Datenspeicher-Library AVT-Funktionen enthÑlt, kînnen die Funkti-
      onen dieser Library nur verwendet werden, wenn das B&R-Modul DM_LIB.BR
      im Anwender-Flash-PROM der CPU vorhanden ist.

    - Wenn mehrere 64-KByte-Blîcke (siehe Funktion DMxclear(), DMxstore() und
      DMxfree()) verwendet werden, mu· zusÑtzlich das Datenmodul CFGDMLIB.BR
      ins Anwender-Flash-PROM gespeichert werden.

    - Voraussetzung fÅr die Verwendung der Datenspeicher-Library ist die
      Version V1.90 des Betriebssystems RPSSW.

    - Alle Funktionen der Datenspeicher-Library liefern im Fehlerfall als
      Ergebnis eine @300[Fehlernummer].

                                       @200[ ANHANG ]                      @001[ öbersicht ]
.210
    Datenspeicher-Library : UnterstÅtzte Hardware

    Folgende Hardware-Module unterstÅtzen die Funktionen der Datenspeicher-
    Library:

    …ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÀÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÀÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕª
    ∫ System B&R 2010 ∫ System B&R 2005 ∫ System B&R 2003 ∫
    ÃÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕŒÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕŒÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕπ
    ∫ IF100           ∫ CP260           ∫ CP470           ∫
    ∫ IF101           ∫ XP152           ∫ CP474           ∫
    ∫                 ∫ IF260           ∫ CP770           ∫
    ∫                 ∫ IF152           ∫ CP774           ∫
    ∫                 ∫ IPxxx           ∫                 ∫
    ∫                 ∫                 ∫                 ∫
    »ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕ ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕ ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕº






                                       @200[ ANHANG ]                      @001[ öbersicht ]
.220
    Datenspeicher-Library : Datenmodul CFGDMLIB.BR

    Mit dem Datenmodul CFGDMLIB.BR wird die Anzahl (Datentyp BYTE) der 64-
    KByte-Blîcke, welche im Anwender-Flash-PROM fÅr die Behandlung mit den
    DMx-Funktionsblîcken (DMxclear(), DMxstore() und DMxfree()) reserviert
    werden, konfiguriert. Dieses Datenmodul kann mit dem Programmiersystem
    PG2000 erstellt werden und mu· zusammen mit dem B&R-Modul DM_LIB.BR ins
    Anwender-Flash-PROM Åbertragen werden. Nach dem öbertragen dieser Module
    in den nullspannungssicheren Speicher mu· ein KALTSTART (frÅher "TOTALINIT"
    genannt) durchgefÅhrt werden.











                                       @200[ ANHANG ]                      @001[ öbersicht ]
.250
    Datenspeicher-Library : Syntaxbeschreibung

    Datentypen:
    FÅr viele Funktionen sind bestimmte Gruppen von Datentypen zulÑssig. Um
    bei der Funktionsbeschreibung nicht alle zulÑssigen Datentypen anfÅhren
    zu mÅssen, werden folgende Gruppenbezeichnungen eingefÅhrt:
    …ÕÕÕÕÕÕÕÕÀÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕª
    ∫ Gruppe ∫  BIT  ≥ INT8  ≥ BYTE  ≥ INT16 ≥ WORD  ≥ INT32 ≥ LONG  ≥ FLOAT ∫
    ÃÕÕÕÕÕÕÕÕŒÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕÿÕÕÕÕÕÕÕπ
    ∫ BASIS  ∫       ≥   x   ≥   x   ≥   x   ≥   x   ≥   x   ≥   x   ≥       ∫
    «ƒƒƒƒƒƒƒƒ◊ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ∂
    ∫ NICHT  ∫   x   ≥   x   ≥   x   ≥   x   ≥   x   ≥   x   ≥   x   ≥       ∫
    ∫ FLOAT  ∫       ≥       ≥       ≥       ≥       ≥       ≥       ≥       ∫
    «ƒƒƒƒƒƒƒƒ◊ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ∂
    ∫ ALLE   ∫   x   ≥   x   ≥   x   ≥   x   ≥   x   ≥   x   ≥   x   ≥   x   ∫
    «ƒƒƒƒƒƒƒƒ◊ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒ∂
    ∫ FELD   ∫  [x]  ≥  [x]  ≥  [x]  ≥  [x]  ≥  [x]  ≥  [x]  ≥  [x]  ≥  [x]  ∫
    »ÕÕÕÕÕÕÕÕ ÕÕÕÕÕÕÕœÕÕÕÕÕÕÕœÕÕÕÕÕÕÕœÕÕÕÕÕÕÕœÕÕÕÕÕÕÕœÕÕÕÕÕÕÕœÕÕÕÕÕÕÕœÕÕÕÕÕÕÕº
      x  Datentyp ist zulÑssig
     [x] Datentyp ist zulÑssig als Feldvariable oder Zeichenkette (String)

                                     @251[ Fortsetzung ]                   @001[ öbersicht ]
.251
    Datenspeicher-Library : Syntaxbeschreibung (Fortsetzung)

    Pfeile:
    FÅr die Darstellung von Eingangs- und Ausgangsparametern werden Pfeile
    verwendet. Dabei gilt folgende Vereinbarung:
    …ÕÕÕÕÕÕÕÕÕÀÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕª
    ∫  Pfeil  ∫  Bedeutung                                                   ∫
    ÃÕÕÕÕÕÕÕÕÕŒÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕπ
    ∫   ->    ∫  Eingangsparameter                                           ∫
    «ƒƒƒƒƒƒƒƒƒ◊ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∂
    ∫   <->   ∫  Ein-/Ausgangsparameter. Funktionell ist es ein Ausgangs-    ∫
    ∫         ∫  parameter. öblicherweise wird er aber vor dem Aufruf der    ∫
    ∫         ∫  Funktion mit einer bestimmten Information geladen (z.B.     ∫
    ∫         ∫  einer Adresse). Meist wird die Adresse einer Variable mit   ∫
    ∫         ∫  adr() [PL2000] oder einem Adre·kontakt [KOP] angeschlossen. ∫
    «ƒƒƒƒƒƒƒƒƒ◊ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∂
    ∫   <-    ∫  Ausgangsparameter                                           ∫
    »ÕÕÕÕÕÕÕÕÕ ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕº



                                     @252[ Fortsetzung ]                   @001[ öbersicht ]
.252
    Datenspeicher-Library : Syntaxbeschreibung (Fortsetzung)

    Funktionsblîcke:
    Funktionsblîcke sind in dieser Online-Hilfe nicht grafisch dargestellt.
    Sie finden aber alle fÅr Funktionsblîcke relevanten Informationen, wie
    Eingangsparameter (->), Ein-/Ausgangsparameter (<->) und Ausgangsparameter
    (<-) in der Online-Hilfe.














                                       @200[ ANHANG ]                      @001[ öbersicht ]
.300
    Datenspeicher-Library : Fehlernummern

    Die folgende Liste ist eine Zusammenfassung aller mîglichen Fehlermeldungen
    der Datenspeicher-Library:

    6380    Kein Speicher in der MEMCL_SPSSW
    6381    Kein Anwender-Flash-PROM mit HW-Funktion MEM_CPU
    6382    Kein Eintrag fÅr das Anwender-Flash-PROM in der CMEM Systemtabelle
    6383    Kein freier 64-KByte-Block im Anwender-Flash-PROM vorhanden
            (-> Anwender-Flash-PROM lîschen)
    6384    Interner Fehler im Hardware-Aufruf ROM_getfreeptr
    6385    CPU-Typ wird nicht unterstÅtzt
    6386    Interner Fehler - keine Root-Task vorhanden
    6387    Interner Fehler - Funktion MO_search_p von der Systemsoftware
            nicht gesetzt
    6388    Feherhaftes Datenmodul im Hochlauf gefunden (ein defektes Daten-
            modul entsteht z.B. bei einem Stromausfall wÑhrend des Brennens) 
    6389    Internes DMEMORY-Handle 0 oder ungÅltig (-> Speicherfehler)
    6390    DMEMORY voll -> Funktion DMclear() aufrufen
    6391    Parameter "ident" nicht gÅltig oder falscher Modultyp

                                     @301[ Fortsetzung ]                   @001[ öbersicht ]
.301
    Datenspeicher-Library : Fehlernummern (Fortsetzung)

    6392    Die DatenlÑnge der Datensektion des Referenzmoduls stimmt nicht
            mit dem Parameter "size" Åberein
    6393    Es existiert bereits ein Modul mit dem angegebenen Namen
    6394    B&R-Modul DM_LIB.BR wurde gelîscht (-> neuerlich Laden, Brennen
            und KALTSTART) oder es wurde nur ein WARMSTART durchgefÅhrt
    6395    Datenspeicher (DMEMORY) wird gerade von einem anderen Funktions-
            block der Datenspeicher-Library bearbeitet
    6396    FÅr den Parameter "data" wurde ein nichtinitialisierter Zeiger
            (Null Pointer) Åbergeben
    6398    Die im Datenmodul CFGDMLIB angegebene Blocknummer ist zu gro· fÅr
            das vorhandene Anwender-Flash-PROM
    6398    Die angegebene Blocknummer ("block_no") ist grî·er, als im Daten-
            modul CFGDMLIB definiert
    8022    Modultabelle voll -> vergrî·ern Sie in der Systemkonfiguration
            ("sysconf"-Modul) die maximale Anzahl der B&R-Module auf der RPS
    9002    Syntax des Modulnamens nicht gÅltig (Sonderzeichen!)



                                       @200[ ANHANG ]                      @001[ öbersicht ]
.400
    Datenspeicher-Library : History - VersionsÑnderungen

  …ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕ—ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕª
  ∫ V1.01           ≥                                                         ∫
  «ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ∂
  ∫ Erste Version der Online-Hilfe fÅr die Datenspeicher-Library.             ∫
  »ÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕÕº














                                       @200[ ANHANG ]                      @001[ öbersicht ]

.End
